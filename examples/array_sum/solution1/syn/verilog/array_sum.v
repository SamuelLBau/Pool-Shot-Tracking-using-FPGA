// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="array_sum,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7vx690tffg1761-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.820000,HLS_SYN_LAT=33,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=386,HLS_SYN_LUT=372}" *)

module array_sum (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        array_r_address0,
        array_r_ce0,
        array_r_q0,
        array_r_address1,
        array_r_ce1,
        array_r_q1,
        length_r,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 34'b1;
parameter    ap_ST_st2_fsm_1 = 34'b10;
parameter    ap_ST_st3_fsm_2 = 34'b100;
parameter    ap_ST_st4_fsm_3 = 34'b1000;
parameter    ap_ST_st5_fsm_4 = 34'b10000;
parameter    ap_ST_st6_fsm_5 = 34'b100000;
parameter    ap_ST_st7_fsm_6 = 34'b1000000;
parameter    ap_ST_st8_fsm_7 = 34'b10000000;
parameter    ap_ST_st9_fsm_8 = 34'b100000000;
parameter    ap_ST_st10_fsm_9 = 34'b1000000000;
parameter    ap_ST_st11_fsm_10 = 34'b10000000000;
parameter    ap_ST_st12_fsm_11 = 34'b100000000000;
parameter    ap_ST_st13_fsm_12 = 34'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 34'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 34'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 34'b1000000000000000;
parameter    ap_ST_st17_fsm_16 = 34'b10000000000000000;
parameter    ap_ST_st18_fsm_17 = 34'b100000000000000000;
parameter    ap_ST_st19_fsm_18 = 34'b1000000000000000000;
parameter    ap_ST_st20_fsm_19 = 34'b10000000000000000000;
parameter    ap_ST_st21_fsm_20 = 34'b100000000000000000000;
parameter    ap_ST_st22_fsm_21 = 34'b1000000000000000000000;
parameter    ap_ST_st23_fsm_22 = 34'b10000000000000000000000;
parameter    ap_ST_st24_fsm_23 = 34'b100000000000000000000000;
parameter    ap_ST_st25_fsm_24 = 34'b1000000000000000000000000;
parameter    ap_ST_st26_fsm_25 = 34'b10000000000000000000000000;
parameter    ap_ST_st27_fsm_26 = 34'b100000000000000000000000000;
parameter    ap_ST_st28_fsm_27 = 34'b1000000000000000000000000000;
parameter    ap_ST_st29_fsm_28 = 34'b10000000000000000000000000000;
parameter    ap_ST_st30_fsm_29 = 34'b100000000000000000000000000000;
parameter    ap_ST_st31_fsm_30 = 34'b1000000000000000000000000000000;
parameter    ap_ST_st32_fsm_31 = 34'b10000000000000000000000000000000;
parameter    ap_ST_st33_fsm_32 = 34'b100000000000000000000000000000000;
parameter    ap_ST_st34_fsm_33 = 34'b1000000000000000000000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_1 = 32'b1;
parameter    ap_const_lv32_3 = 32'b11;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_9 = 32'b1001;
parameter    ap_const_lv32_B = 32'b1011;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_13 = 32'b10011;
parameter    ap_const_lv32_17 = 32'b10111;
parameter    ap_const_lv32_19 = 32'b11001;
parameter    ap_const_lv32_1B = 32'b11011;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_5 = 32'b101;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_11 = 32'b10001;
parameter    ap_const_lv32_15 = 32'b10101;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv32_12 = 32'b10010;
parameter    ap_const_lv32_16 = 32'b10110;
parameter    ap_const_lv32_1E = 32'b11110;
parameter    ap_const_lv32_2 = 32'b10;
parameter    ap_const_lv32_A = 32'b1010;
parameter    ap_const_lv32_1A = 32'b11010;
parameter    ap_const_lv32_4 = 32'b100;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_1C = 32'b11100;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_14 = 32'b10100;
parameter    ap_const_lv32_18 = 32'b11000;
parameter    ap_const_lv32_20 = 32'b100000;
parameter    ap_const_lv64_0 = 64'b0000000000000000000000000000000000000000000000000000000000000000;
parameter    ap_const_lv64_1 = 64'b1;
parameter    ap_const_lv64_2 = 64'b10;
parameter    ap_const_lv64_3 = 64'b11;
parameter    ap_const_lv64_4 = 64'b100;
parameter    ap_const_lv64_5 = 64'b101;
parameter    ap_const_lv64_6 = 64'b110;
parameter    ap_const_lv64_7 = 64'b111;
parameter    ap_const_lv64_8 = 64'b1000;
parameter    ap_const_lv64_9 = 64'b1001;
parameter    ap_const_lv64_A = 64'b1010;
parameter    ap_const_lv64_B = 64'b1011;
parameter    ap_const_lv64_C = 64'b1100;
parameter    ap_const_lv64_D = 64'b1101;
parameter    ap_const_lv64_E = 64'b1110;
parameter    ap_const_lv64_F = 64'b1111;
parameter    ap_const_lv64_10 = 64'b10000;
parameter    ap_const_lv64_11 = 64'b10001;
parameter    ap_const_lv64_12 = 64'b10010;
parameter    ap_const_lv64_13 = 64'b10011;
parameter    ap_const_lv64_14 = 64'b10100;
parameter    ap_const_lv64_15 = 64'b10101;
parameter    ap_const_lv64_16 = 64'b10110;
parameter    ap_const_lv64_17 = 64'b10111;
parameter    ap_const_lv64_18 = 64'b11000;
parameter    ap_const_lv64_19 = 64'b11001;
parameter    ap_const_lv64_1A = 64'b11010;
parameter    ap_const_lv64_1B = 64'b11011;
parameter    ap_const_lv64_1C = 64'b11100;
parameter    ap_const_lv64_1D = 64'b11101;
parameter    ap_const_lv64_1E = 64'b11110;
parameter    ap_const_lv64_1F = 64'b11111;
parameter    ap_const_lv64_20 = 64'b100000;
parameter    ap_const_lv64_21 = 64'b100001;
parameter    ap_const_lv64_22 = 64'b100010;
parameter    ap_const_lv64_23 = 64'b100011;
parameter    ap_const_lv64_24 = 64'b100100;
parameter    ap_const_lv64_25 = 64'b100101;
parameter    ap_const_lv64_26 = 64'b100110;
parameter    ap_const_lv64_27 = 64'b100111;
parameter    ap_const_lv64_28 = 64'b101000;
parameter    ap_const_lv64_29 = 64'b101001;
parameter    ap_const_lv64_2A = 64'b101010;
parameter    ap_const_lv64_2B = 64'b101011;
parameter    ap_const_lv64_2C = 64'b101100;
parameter    ap_const_lv64_2D = 64'b101101;
parameter    ap_const_lv64_2E = 64'b101110;
parameter    ap_const_lv64_2F = 64'b101111;
parameter    ap_const_lv64_30 = 64'b110000;
parameter    ap_const_lv64_31 = 64'b110001;
parameter    ap_const_lv64_32 = 64'b110010;
parameter    ap_const_lv64_33 = 64'b110011;
parameter    ap_const_lv64_34 = 64'b110100;
parameter    ap_const_lv64_35 = 64'b110101;
parameter    ap_const_lv64_36 = 64'b110110;
parameter    ap_const_lv64_37 = 64'b110111;
parameter    ap_const_lv64_38 = 64'b111000;
parameter    ap_const_lv64_39 = 64'b111001;
parameter    ap_const_lv64_3A = 64'b111010;
parameter    ap_const_lv64_3B = 64'b111011;
parameter    ap_const_lv64_3C = 64'b111100;
parameter    ap_const_lv64_3D = 64'b111101;
parameter    ap_const_lv64_3E = 64'b111110;
parameter    ap_const_lv64_3F = 64'b111111;
parameter    ap_const_lv32_21 = 32'b100001;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [5:0] array_r_address0;
output   array_r_ce0;
input  [31:0] array_r_q0;
output  [5:0] array_r_address1;
output   array_r_ce1;
input  [31:0] array_r_q1;
input  [31:0] length_r;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[5:0] array_r_address0;
reg array_r_ce0;
reg[5:0] array_r_address1;
reg array_r_ce1;
(* fsm_encoding = "none" *) reg   [33:0] ap_CS_fsm = 34'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_50;
reg   [31:0] reg_729;
reg    ap_sig_cseq_ST_st2_fsm_1;
reg    ap_sig_bdd_74;
reg    ap_sig_cseq_ST_st4_fsm_3;
reg    ap_sig_bdd_81;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_89;
reg    ap_sig_cseq_ST_st10_fsm_9;
reg    ap_sig_bdd_97;
reg    ap_sig_cseq_ST_st12_fsm_11;
reg    ap_sig_bdd_105;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_113;
reg    ap_sig_cseq_ST_st20_fsm_19;
reg    ap_sig_bdd_121;
reg    ap_sig_cseq_ST_st24_fsm_23;
reg    ap_sig_bdd_129;
reg    ap_sig_cseq_ST_st26_fsm_25;
reg    ap_sig_bdd_137;
reg    ap_sig_cseq_ST_st28_fsm_27;
reg    ap_sig_bdd_145;
reg    ap_sig_cseq_ST_st32_fsm_31;
reg    ap_sig_bdd_153;
reg   [31:0] reg_733;
wire   [31:0] grp_fu_723_p2;
reg   [31:0] reg_737;
reg    ap_sig_cseq_ST_st6_fsm_5;
reg    ap_sig_bdd_164;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_171;
reg    ap_sig_cseq_ST_st18_fsm_17;
reg    ap_sig_bdd_179;
reg    ap_sig_cseq_ST_st22_fsm_21;
reg    ap_sig_bdd_187;
reg    ap_sig_cseq_ST_st30_fsm_29;
reg    ap_sig_bdd_195;
reg   [31:0] reg_741;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_204;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_211;
reg    ap_sig_cseq_ST_st19_fsm_18;
reg    ap_sig_bdd_219;
reg    ap_sig_cseq_ST_st23_fsm_22;
reg    ap_sig_bdd_227;
reg    ap_sig_cseq_ST_st31_fsm_30;
reg    ap_sig_bdd_235;
wire   [31:0] grp_fu_751_p2;
reg   [31:0] reg_769;
reg    ap_sig_cseq_ST_st3_fsm_2;
reg    ap_sig_bdd_245;
reg    ap_sig_cseq_ST_st11_fsm_10;
reg    ap_sig_bdd_252;
reg    ap_sig_cseq_ST_st27_fsm_26;
reg    ap_sig_bdd_260;
reg   [31:0] reg_773;
reg    ap_sig_cseq_ST_st5_fsm_4;
reg    ap_sig_bdd_269;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_276;
reg    ap_sig_cseq_ST_st29_fsm_28;
reg    ap_sig_bdd_284;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_329;
wire   [31:0] grp_fu_783_p2;
reg   [31:0] tmp1_reg_898;
reg    ap_sig_cseq_ST_st17_fsm_16;
reg    ap_sig_bdd_370;
reg   [31:0] tmp16_reg_983;
reg    ap_sig_cseq_ST_st21_fsm_20;
reg    ap_sig_bdd_394;
wire   [31:0] grp_fu_763_p2;
reg   [31:0] tmp33_reg_1028;
reg    ap_sig_cseq_ST_st25_fsm_24;
reg    ap_sig_bdd_419;
reg   [31:0] tmp40_reg_1073;
reg   [31:0] tmp47_reg_1148;
reg    ap_sig_cseq_ST_st33_fsm_32;
reg    ap_sig_bdd_458;
wire   [31:0] grp_fu_745_p2;
wire   [31:0] grp_fu_757_p2;
wire   [31:0] grp_fu_777_p2;
reg    ap_sig_cseq_ST_st34_fsm_33;
reg    ap_sig_bdd_613;
wire   [31:0] tmp32_fu_793_p2;
wire   [31:0] tmp31_fu_797_p2;
wire   [31:0] tmp_fu_789_p2;
reg   [33:0] ap_NS_fsm;




always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31))) begin
        reg_729 <= array_r_q0;
        reg_733 <= array_r_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29))) begin
        reg_737 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30))) begin
        reg_741 <= grp_fu_723_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26))) begin
        reg_769 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28))) begin
        reg_773 <= grp_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        tmp16_reg_983 <= grp_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp1_reg_898 <= grp_fu_783_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        tmp33_reg_1028 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        tmp40_reg_1073 <= grp_fu_763_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st33_fsm_32)) begin
        tmp47_reg_1148 <= grp_fu_783_p2;
    end
end

always @ (ap_sig_cseq_ST_st34_fsm_33) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st34_fsm_33) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st34_fsm_33)) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_97) begin
    if (ap_sig_bdd_97) begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st10_fsm_9 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_252) begin
    if (ap_sig_bdd_252) begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st11_fsm_10 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_105) begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st12_fsm_11 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_276) begin
    if (ap_sig_bdd_276) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_171) begin
    if (ap_sig_bdd_171) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_211) begin
    if (ap_sig_bdd_211) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_113) begin
    if (ap_sig_bdd_113) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_370) begin
    if (ap_sig_bdd_370) begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st17_fsm_16 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_179) begin
    if (ap_sig_bdd_179) begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st18_fsm_17 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_219) begin
    if (ap_sig_bdd_219) begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st19_fsm_18 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_50) begin
    if (ap_sig_bdd_50) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_121) begin
    if (ap_sig_bdd_121) begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st20_fsm_19 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_394) begin
    if (ap_sig_bdd_394) begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st21_fsm_20 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_187) begin
    if (ap_sig_bdd_187) begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st22_fsm_21 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_227) begin
    if (ap_sig_bdd_227) begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st23_fsm_22 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_129) begin
    if (ap_sig_bdd_129) begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st24_fsm_23 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_419) begin
    if (ap_sig_bdd_419) begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st25_fsm_24 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_137) begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st26_fsm_25 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_260) begin
    if (ap_sig_bdd_260) begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st27_fsm_26 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_145) begin
    if (ap_sig_bdd_145) begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st28_fsm_27 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_284) begin
    if (ap_sig_bdd_284) begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st29_fsm_28 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_74) begin
    if (ap_sig_bdd_74) begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st2_fsm_1 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_195) begin
    if (ap_sig_bdd_195) begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st30_fsm_29 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_235) begin
    if (ap_sig_bdd_235) begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st31_fsm_30 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_153) begin
    if (ap_sig_bdd_153) begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st32_fsm_31 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_458) begin
    if (ap_sig_bdd_458) begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st33_fsm_32 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_613) begin
    if (ap_sig_bdd_613) begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st34_fsm_33 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_245) begin
    if (ap_sig_bdd_245) begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st3_fsm_2 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_81) begin
    if (ap_sig_bdd_81) begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st4_fsm_3 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_269) begin
    if (ap_sig_bdd_269) begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st5_fsm_4 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_164) begin
    if (ap_sig_bdd_164) begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st6_fsm_5 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_204) begin
    if (ap_sig_bdd_204) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_89) begin
    if (ap_sig_bdd_89) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_329) begin
    if (ap_sig_bdd_329) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st25_fsm_24) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        array_r_address0 = ap_const_lv64_3E;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        array_r_address0 = ap_const_lv64_3C;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        array_r_address0 = ap_const_lv64_3A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        array_r_address0 = ap_const_lv64_38;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        array_r_address0 = ap_const_lv64_36;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        array_r_address0 = ap_const_lv64_34;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        array_r_address0 = ap_const_lv64_32;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        array_r_address0 = ap_const_lv64_30;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        array_r_address0 = ap_const_lv64_2E;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        array_r_address0 = ap_const_lv64_2C;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        array_r_address0 = ap_const_lv64_2A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        array_r_address0 = ap_const_lv64_28;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        array_r_address0 = ap_const_lv64_26;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        array_r_address0 = ap_const_lv64_24;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        array_r_address0 = ap_const_lv64_22;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        array_r_address0 = ap_const_lv64_20;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        array_r_address0 = ap_const_lv64_1E;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        array_r_address0 = ap_const_lv64_1C;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        array_r_address0 = ap_const_lv64_1A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        array_r_address0 = ap_const_lv64_18;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        array_r_address0 = ap_const_lv64_16;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        array_r_address0 = ap_const_lv64_14;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        array_r_address0 = ap_const_lv64_12;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        array_r_address0 = ap_const_lv64_10;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        array_r_address0 = ap_const_lv64_E;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        array_r_address0 = ap_const_lv64_C;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        array_r_address0 = ap_const_lv64_A;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        array_r_address0 = ap_const_lv64_8;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        array_r_address0 = ap_const_lv64_6;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        array_r_address0 = ap_const_lv64_4;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        array_r_address0 = ap_const_lv64_2;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        array_r_address0 = ap_const_lv64_0;
    end else begin
        array_r_address0 = 'bx;
    end
end

always @ (ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st25_fsm_24) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31)) begin
        array_r_address1 = ap_const_lv64_3F;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30)) begin
        array_r_address1 = ap_const_lv64_3D;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29)) begin
        array_r_address1 = ap_const_lv64_3B;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28)) begin
        array_r_address1 = ap_const_lv64_39;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27)) begin
        array_r_address1 = ap_const_lv64_37;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26)) begin
        array_r_address1 = ap_const_lv64_35;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25)) begin
        array_r_address1 = ap_const_lv64_33;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24)) begin
        array_r_address1 = ap_const_lv64_31;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23)) begin
        array_r_address1 = ap_const_lv64_2F;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22)) begin
        array_r_address1 = ap_const_lv64_2D;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21)) begin
        array_r_address1 = ap_const_lv64_2B;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20)) begin
        array_r_address1 = ap_const_lv64_29;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19)) begin
        array_r_address1 = ap_const_lv64_27;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18)) begin
        array_r_address1 = ap_const_lv64_25;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17)) begin
        array_r_address1 = ap_const_lv64_23;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16)) begin
        array_r_address1 = ap_const_lv64_21;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15)) begin
        array_r_address1 = ap_const_lv64_1F;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        array_r_address1 = ap_const_lv64_1D;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        array_r_address1 = ap_const_lv64_1B;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        array_r_address1 = ap_const_lv64_19;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11)) begin
        array_r_address1 = ap_const_lv64_17;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10)) begin
        array_r_address1 = ap_const_lv64_15;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9)) begin
        array_r_address1 = ap_const_lv64_13;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        array_r_address1 = ap_const_lv64_11;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        array_r_address1 = ap_const_lv64_F;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        array_r_address1 = ap_const_lv64_D;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5)) begin
        array_r_address1 = ap_const_lv64_B;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4)) begin
        array_r_address1 = ap_const_lv64_9;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3)) begin
        array_r_address1 = ap_const_lv64_7;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2)) begin
        array_r_address1 = ap_const_lv64_5;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1)) begin
        array_r_address1 = ap_const_lv64_3;
    end else if ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0)) begin
        array_r_address1 = ap_const_lv64_1;
    end else begin
        array_r_address1 = 'bx;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st25_fsm_24) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        array_r_ce0 = ap_const_logic_1;
    end else begin
        array_r_ce0 = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0 or ap_sig_cseq_ST_st2_fsm_1 or ap_sig_cseq_ST_st4_fsm_3 or ap_sig_cseq_ST_st8_fsm_7 or ap_sig_cseq_ST_st10_fsm_9 or ap_sig_cseq_ST_st12_fsm_11 or ap_sig_cseq_ST_st16_fsm_15 or ap_sig_cseq_ST_st20_fsm_19 or ap_sig_cseq_ST_st24_fsm_23 or ap_sig_cseq_ST_st26_fsm_25 or ap_sig_cseq_ST_st28_fsm_27 or ap_sig_cseq_ST_st32_fsm_31 or ap_sig_cseq_ST_st6_fsm_5 or ap_sig_cseq_ST_st14_fsm_13 or ap_sig_cseq_ST_st18_fsm_17 or ap_sig_cseq_ST_st22_fsm_21 or ap_sig_cseq_ST_st30_fsm_29 or ap_sig_cseq_ST_st7_fsm_6 or ap_sig_cseq_ST_st15_fsm_14 or ap_sig_cseq_ST_st19_fsm_18 or ap_sig_cseq_ST_st23_fsm_22 or ap_sig_cseq_ST_st31_fsm_30 or ap_sig_cseq_ST_st3_fsm_2 or ap_sig_cseq_ST_st11_fsm_10 or ap_sig_cseq_ST_st27_fsm_26 or ap_sig_cseq_ST_st5_fsm_4 or ap_sig_cseq_ST_st13_fsm_12 or ap_sig_cseq_ST_st29_fsm_28 or ap_sig_cseq_ST_st9_fsm_8 or ap_sig_cseq_ST_st17_fsm_16 or ap_sig_cseq_ST_st21_fsm_20 or ap_sig_cseq_ST_st25_fsm_24) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st2_fsm_1) | (ap_const_logic_1 == ap_sig_cseq_ST_st4_fsm_3) | (ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) | (ap_const_logic_1 == ap_sig_cseq_ST_st10_fsm_9) | (ap_const_logic_1 == ap_sig_cseq_ST_st12_fsm_11) | (ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) | (ap_const_logic_1 == ap_sig_cseq_ST_st20_fsm_19) | (ap_const_logic_1 == ap_sig_cseq_ST_st24_fsm_23) | (ap_const_logic_1 == ap_sig_cseq_ST_st26_fsm_25) | (ap_const_logic_1 == ap_sig_cseq_ST_st28_fsm_27) | (ap_const_logic_1 == ap_sig_cseq_ST_st32_fsm_31) | (ap_const_logic_1 == ap_sig_cseq_ST_st6_fsm_5) | (ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13) | (ap_const_logic_1 == ap_sig_cseq_ST_st18_fsm_17) | (ap_const_logic_1 == ap_sig_cseq_ST_st22_fsm_21) | (ap_const_logic_1 == ap_sig_cseq_ST_st30_fsm_29) | (ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6) | (ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) | (ap_const_logic_1 == ap_sig_cseq_ST_st19_fsm_18) | (ap_const_logic_1 == ap_sig_cseq_ST_st23_fsm_22) | (ap_const_logic_1 == ap_sig_cseq_ST_st31_fsm_30) | (ap_const_logic_1 == ap_sig_cseq_ST_st3_fsm_2) | (ap_const_logic_1 == ap_sig_cseq_ST_st11_fsm_10) | (ap_const_logic_1 == ap_sig_cseq_ST_st27_fsm_26) | (ap_const_logic_1 == ap_sig_cseq_ST_st5_fsm_4) | (ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12) | (ap_const_logic_1 == ap_sig_cseq_ST_st29_fsm_28) | ((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0)) | (ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8) | (ap_const_logic_1 == ap_sig_cseq_ST_st17_fsm_16) | (ap_const_logic_1 == ap_sig_cseq_ST_st21_fsm_20) | (ap_const_logic_1 == ap_sig_cseq_ST_st25_fsm_24))) begin
        array_r_ce1 = ap_const_logic_1;
    end else begin
        array_r_ce1 = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            ap_NS_fsm = ap_ST_st9_fsm_8;
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            ap_NS_fsm = ap_ST_st17_fsm_16;
        end
        ap_ST_st17_fsm_16 : 
        begin
            ap_NS_fsm = ap_ST_st18_fsm_17;
        end
        ap_ST_st18_fsm_17 : 
        begin
            ap_NS_fsm = ap_ST_st19_fsm_18;
        end
        ap_ST_st19_fsm_18 : 
        begin
            ap_NS_fsm = ap_ST_st20_fsm_19;
        end
        ap_ST_st20_fsm_19 : 
        begin
            ap_NS_fsm = ap_ST_st21_fsm_20;
        end
        ap_ST_st21_fsm_20 : 
        begin
            ap_NS_fsm = ap_ST_st22_fsm_21;
        end
        ap_ST_st22_fsm_21 : 
        begin
            ap_NS_fsm = ap_ST_st23_fsm_22;
        end
        ap_ST_st23_fsm_22 : 
        begin
            ap_NS_fsm = ap_ST_st24_fsm_23;
        end
        ap_ST_st24_fsm_23 : 
        begin
            ap_NS_fsm = ap_ST_st25_fsm_24;
        end
        ap_ST_st25_fsm_24 : 
        begin
            ap_NS_fsm = ap_ST_st26_fsm_25;
        end
        ap_ST_st26_fsm_25 : 
        begin
            ap_NS_fsm = ap_ST_st27_fsm_26;
        end
        ap_ST_st27_fsm_26 : 
        begin
            ap_NS_fsm = ap_ST_st28_fsm_27;
        end
        ap_ST_st28_fsm_27 : 
        begin
            ap_NS_fsm = ap_ST_st29_fsm_28;
        end
        ap_ST_st29_fsm_28 : 
        begin
            ap_NS_fsm = ap_ST_st30_fsm_29;
        end
        ap_ST_st30_fsm_29 : 
        begin
            ap_NS_fsm = ap_ST_st31_fsm_30;
        end
        ap_ST_st31_fsm_30 : 
        begin
            ap_NS_fsm = ap_ST_st32_fsm_31;
        end
        ap_ST_st32_fsm_31 : 
        begin
            ap_NS_fsm = ap_ST_st33_fsm_32;
        end
        ap_ST_st33_fsm_32 : 
        begin
            ap_NS_fsm = ap_ST_st34_fsm_33;
        end
        ap_ST_st34_fsm_33 : 
        begin
            ap_NS_fsm = ap_ST_st1_fsm_0;
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = (tmp31_fu_797_p2 + tmp_fu_789_p2);


always @ (ap_CS_fsm) begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_113 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_121 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_13]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_129 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_17]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_19]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_145 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1B]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_153 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_164 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_5]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_171 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_179 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_11]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_187 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_15]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_195 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_204 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_211 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_219 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_12]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_227 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_16]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_235 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_245 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_2]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_252 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_260 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1A]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_269 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_4]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_276 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_284 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_329 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_370 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_10]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_394 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_14]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_419 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_18]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_458 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_20]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_50 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_613 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_21]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_74 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_1]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_81 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_3]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_89 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_97 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_9]);
end

assign grp_fu_723_p2 = (array_r_q0 + array_r_q1);

assign grp_fu_745_p2 = (reg_729 + reg_733);

assign grp_fu_751_p2 = (grp_fu_723_p2 + grp_fu_745_p2);

assign grp_fu_757_p2 = (reg_741 + reg_737);

assign grp_fu_763_p2 = (grp_fu_751_p2 + grp_fu_757_p2);

assign grp_fu_777_p2 = (reg_773 + reg_769);

assign grp_fu_783_p2 = (grp_fu_763_p2 + grp_fu_777_p2);

assign tmp31_fu_797_p2 = (tmp47_reg_1148 + tmp32_fu_793_p2);

assign tmp32_fu_793_p2 = (tmp40_reg_1073 + tmp33_reg_1028);

assign tmp_fu_789_p2 = (tmp16_reg_983 + tmp1_reg_898);


endmodule //array_sum

