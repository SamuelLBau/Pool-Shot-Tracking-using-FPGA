// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _sparse_mm_HH_
#define _sparse_mm_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "sparse_mm_mul_32s_32s_32_3.h"
#include "sparse_mm_mul_31ns_32s_32_3.h"

namespace ap_rtl {

struct sparse_mm : public sc_module {
    // Port declarations 20
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<22> > a_address0;
    sc_out< sc_logic > a_ce0;
    sc_in< sc_lv<64> > a_q0;
    sc_in< sc_lv<32> > a_y;
    sc_in< sc_lv<32> > a_x;
    sc_out< sc_lv<11> > b_address0;
    sc_out< sc_logic > b_ce0;
    sc_in< sc_lv<32> > b_q0;
    sc_in< sc_lv<32> > b_y;
    sc_in< sc_lv<32> > b_x;
    sc_out< sc_lv<11> > c_address0;
    sc_out< sc_logic > c_ce0;
    sc_out< sc_logic > c_we0;
    sc_out< sc_lv<32> > c_d0;


    // Module declarations
    sparse_mm(sc_module_name name);
    SC_HAS_PROCESS(sparse_mm);

    ~sparse_mm();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sparse_mm_mul_32s_32s_32_3<1,3,32,32,32>* sparse_mm_mul_32s_32s_32_3_U1;
    sparse_mm_mul_31ns_32s_32_3<1,3,31,32,32>* sparse_mm_mul_31ns_32s_32_3_U2;
    sparse_mm_mul_32s_32s_32_3<1,3,32,32,32>* sparse_mm_mul_32s_32s_32_3_U3;
    sc_signal< sc_lv<18> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_34;
    sc_signal< sc_lv<32> > ibx_cast_fu_145_p1;
    sc_signal< sc_lv<32> > ibx_cast_reg_258;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_78;
    sc_signal< sc_lv<31> > ibx_1_fu_154_p2;
    sc_signal< sc_lv<31> > ibx_1_reg_267;
    sc_signal< sc_lv<32> > a_i_1_fu_165_p2;
    sc_signal< sc_lv<32> > a_i_1_reg_275;
    sc_signal< sc_logic > ap_sig_cseq_ST_st3_fsm_2;
    sc_signal< bool > ap_sig_bdd_89;
    sc_signal< sc_lv<1> > tmp_1_fu_160_p2;
    sc_signal< sc_lv<32> > column_cast_fu_190_p1;
    sc_signal< sc_lv<32> > column_cast_reg_289;
    sc_signal< sc_logic > ap_sig_cseq_ST_st6_fsm_5;
    sc_signal< bool > ap_sig_bdd_105;
    sc_signal< sc_lv<32> > value_reg_294;
    sc_signal< sc_lv<32> > iay_1_fu_204_p2;
    sc_signal< sc_lv<32> > iay_1_reg_299;
    sc_signal< sc_lv<1> > tmp_6_fu_176_p1;
    sc_signal< sc_lv<32> > grp_fu_215_p2;
    sc_signal< sc_lv<32> > tmp_8_reg_304;
    sc_signal< sc_logic > ap_sig_cseq_ST_st9_fsm_8;
    sc_signal< bool > ap_sig_bdd_122;
    sc_signal< sc_logic > ap_sig_cseq_ST_st10_fsm_9;
    sc_signal< bool > ap_sig_bdd_131;
    sc_signal< sc_lv<32> > b_load_reg_314;
    sc_signal< sc_logic > ap_sig_cseq_ST_st11_fsm_10;
    sc_signal< bool > ap_sig_bdd_139;
    sc_signal< sc_lv<32> > grp_fu_228_p2;
    sc_signal< sc_lv<32> > tmp_7_reg_319;
    sc_signal< sc_logic > ap_sig_cseq_ST_st14_fsm_13;
    sc_signal< bool > ap_sig_bdd_148;
    sc_signal< sc_lv<32> > sum_1_fu_232_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st15_fsm_14;
    sc_signal< bool > ap_sig_bdd_157;
    sc_signal< sc_lv<32> > grp_fu_210_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_329;
    sc_signal< sc_logic > ap_sig_cseq_ST_st17_fsm_16;
    sc_signal< bool > ap_sig_bdd_166;
    sc_signal< sc_lv<31> > ibx_reg_90;
    sc_signal< sc_lv<32> > a_i_reg_101;
    sc_signal< sc_lv<1> > tmp_fu_149_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st18_fsm_17;
    sc_signal< bool > ap_sig_bdd_183;
    sc_signal< sc_lv<32> > iay_reg_114;
    sc_signal< sc_lv<32> > sum_reg_129;
    sc_signal< sc_lv<64> > tmp_2_fu_171_p1;
    sc_signal< sc_lv<64> > tmp_s_fu_223_p1;
    sc_signal< sc_lv<64> > tmp_4_fu_241_p1;
    sc_signal< sc_logic > ap_sig_cseq_ST_st4_fsm_3;
    sc_signal< bool > ap_sig_bdd_200;
    sc_signal< sc_logic > ap_sig_cseq_ST_st5_fsm_4;
    sc_signal< bool > ap_sig_bdd_208;
    sc_signal< sc_lv<32> > tmp_fu_149_p1;
    sc_signal< sc_lv<31> > column_fu_180_p4;
    sc_signal< sc_lv<31> > grp_fu_215_p0;
    sc_signal< sc_logic > ap_sig_cseq_ST_st7_fsm_6;
    sc_signal< bool > ap_sig_bdd_247;
    sc_signal< sc_lv<32> > tmp_9_fu_219_p2;
    sc_signal< sc_lv<32> > tmp_5_fu_237_p2;
    sc_signal< sc_logic > grp_fu_210_ce;
    sc_signal< sc_logic > grp_fu_215_ce;
    sc_signal< sc_logic > grp_fu_228_ce;
    sc_signal< sc_lv<18> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<18> ap_ST_st1_fsm_0;
    static const sc_lv<18> ap_ST_st2_fsm_1;
    static const sc_lv<18> ap_ST_st3_fsm_2;
    static const sc_lv<18> ap_ST_st4_fsm_3;
    static const sc_lv<18> ap_ST_st5_fsm_4;
    static const sc_lv<18> ap_ST_st6_fsm_5;
    static const sc_lv<18> ap_ST_st7_fsm_6;
    static const sc_lv<18> ap_ST_st8_fsm_7;
    static const sc_lv<18> ap_ST_st9_fsm_8;
    static const sc_lv<18> ap_ST_st10_fsm_9;
    static const sc_lv<18> ap_ST_st11_fsm_10;
    static const sc_lv<18> ap_ST_st12_fsm_11;
    static const sc_lv<18> ap_ST_st13_fsm_12;
    static const sc_lv<18> ap_ST_st14_fsm_13;
    static const sc_lv<18> ap_ST_st15_fsm_14;
    static const sc_lv<18> ap_ST_st16_fsm_15;
    static const sc_lv<18> ap_ST_st17_fsm_16;
    static const sc_lv<18> ap_ST_st18_fsm_17;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<31> ap_const_lv31_0;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<31> ap_const_lv31_1;
    static const sc_lv<32> ap_const_lv32_1F;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_a_address0();
    void thread_a_ce0();
    void thread_a_i_1_fu_165_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sig_bdd_105();
    void thread_ap_sig_bdd_122();
    void thread_ap_sig_bdd_131();
    void thread_ap_sig_bdd_139();
    void thread_ap_sig_bdd_148();
    void thread_ap_sig_bdd_157();
    void thread_ap_sig_bdd_166();
    void thread_ap_sig_bdd_183();
    void thread_ap_sig_bdd_200();
    void thread_ap_sig_bdd_208();
    void thread_ap_sig_bdd_247();
    void thread_ap_sig_bdd_34();
    void thread_ap_sig_bdd_78();
    void thread_ap_sig_bdd_89();
    void thread_ap_sig_cseq_ST_st10_fsm_9();
    void thread_ap_sig_cseq_ST_st11_fsm_10();
    void thread_ap_sig_cseq_ST_st14_fsm_13();
    void thread_ap_sig_cseq_ST_st15_fsm_14();
    void thread_ap_sig_cseq_ST_st17_fsm_16();
    void thread_ap_sig_cseq_ST_st18_fsm_17();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st3_fsm_2();
    void thread_ap_sig_cseq_ST_st4_fsm_3();
    void thread_ap_sig_cseq_ST_st5_fsm_4();
    void thread_ap_sig_cseq_ST_st6_fsm_5();
    void thread_ap_sig_cseq_ST_st7_fsm_6();
    void thread_ap_sig_cseq_ST_st9_fsm_8();
    void thread_b_address0();
    void thread_b_ce0();
    void thread_c_address0();
    void thread_c_ce0();
    void thread_c_d0();
    void thread_c_we0();
    void thread_column_cast_fu_190_p1();
    void thread_column_fu_180_p4();
    void thread_grp_fu_210_ce();
    void thread_grp_fu_215_ce();
    void thread_grp_fu_215_p0();
    void thread_grp_fu_228_ce();
    void thread_iay_1_fu_204_p2();
    void thread_ibx_1_fu_154_p2();
    void thread_ibx_cast_fu_145_p1();
    void thread_sum_1_fu_232_p2();
    void thread_tmp_1_fu_160_p2();
    void thread_tmp_2_fu_171_p1();
    void thread_tmp_4_fu_241_p1();
    void thread_tmp_5_fu_237_p2();
    void thread_tmp_6_fu_176_p1();
    void thread_tmp_9_fu_219_p2();
    void thread_tmp_fu_149_p1();
    void thread_tmp_fu_149_p2();
    void thread_tmp_s_fu_223_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
